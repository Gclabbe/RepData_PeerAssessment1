source("pollutantmean.R")
pollutantmean(1:2)
filename
source("pollutantmean.R")
pollutantmean(1:2)
source("pollutantmean.R")
monitors[1]<-read.csv("001.csv")
monitors<-read.csv("001.csv")
monitors
monitors(1) <- read.csv("001.csv")
x[1] <- 1
x[[1]] <- 1
?read
?read.csv
?data.frame
monitors <- as.vector(3)
monitors
monitors[1]<-1
monitors[2]<-2
monitors[3]<-3
monitors[4]<-4
monitors
?as.vector
monitors <- vector(8)
monitors <- vector(length = 8)
monitors
source("pollutantmean.R")
pollutantmean(1:2)
warnings()
pollutantmean(id = 1:2)
monitors <- pollutantmean(id = 1:2)
monitors
dim(monitors)
?dim
lenght(monitors)
length(monitors)
monitors[1]
rbind(c(1,2),c(3.4))
cbind(c(1,2),c(3,4))
c(1.2)
r(1,2)
mean(c(1,2))
c(1,2)
c(1,2)+c(3,4)
list(c(1,2),c(3,4))
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmean(1:2)
monitors <- pollutantmean(1:2)
monitors
length(monitors)
dir()
sapply("001.csv", read.csv)
sapply("001.csv, 002,csv", read.csv)
sapply("001.csv, 002.csv", read.csv)
sapply("001.csv","002.csv", read.csv)
sapply(paste(sprintf("%03d" 1:2), sep=".csv"), read.csv)
sprintf("%03d" 1:2)
sprintf("%03d" 1)
x <- 1:2
x
sprintf("%03d" x)
sprintf("%03d", x)
sprintf("%03d", 1:2)
sapply(paste(sprintf("%03d", 1:2), sep=".csv"), read.csv)
sapply(paste(sprintf("%03d", 1:2), ".csv", sep=""), read.csv)
ls
files <- sapply(paste(sprintf("%03d", 1:2), ".csv", sep=""), read.csv)
files
files("001.csv")
files["001.csv"]
files[["001.csv"]]
files[,"001.csv"]
files[,"001.csv"][1,]
files[1,"001.csv"]
files["sulfate","001.csv"]
mean(files["sulfate","001.csv"],na.rm=TRUE)
dim(files["sulfate","001.csv"])
temp <- files["sulfate","001.csv"]
temp
mean(temp)
attributes(temp)
source("pollutantmean.R")
pollutantmean(1:2)
monitors <- pollutantmean(1:2)
dim monitors
dim(monitors)
monitors
mean(monitors["sulfate","001.csv"], na.rm = TRUE)
monitors <- pollutantmean(id = 1:2)
dim(monitors)
monitors
monitors["sulfate","001.csv"]
source("pollutantmean.R")
pollutantmean(id = 1:2)
monitors <- pollutantmean(id = 1:2)
dim(monitors)
monitors
VIEW(monitors)
View(monitors)
monitors["Date","sulfate"]
monitors["Date","001.csv"]
monitors["001.csv","Date"]
monitors["sulfate","001.csv"]
monitors[,"001.csv"]
monitors[1,"001.csv"]
monitors[1,1]
monitors[1,2]
monitors[2,1]
monitors[$sulfate,$001.csv]
?data.frame
mean(monitors[2,1],na.rm = TRUE)
temp <- monitors[2,1]
attributes(temp)
dim(temp)
monitors[2,1]
t <- read.csv("001.csv")
dim(t)
type(t)
is.data.frame(t)
t["Date"]
t["sulfate"]
mean(t["sulfate"],na.rm = TRUE)
attributes(t)
?read.csv
t <- read.csv("001.csv")
mean(t$sulfate)
mean(t$sulfate, na.rm = TRUE)
source(pollutantmean.R)
dir()
source("pollutantmean.R")
monitors <- pollutantmean(1:2)
t <- monitors[1]
mean(t$sulfate, na.rm = TRUE)
t2 = [[1]]
t2 <- monitors[[1]]
mean(t2$sulfate, na.rm = TRUE)
monitors <- pollutantmean(id = 1:2)
View(monitors)
mean(monitors$sulfate, na.rm = TRUE)
monitors$sulfate
is.data.frame(monitors)
x <- c("001.csv","002.csv")
mean(monitors["sulfate",x], na.rm = TRUE)
x <- c("X001.csv","X002.csv")
mean(monitors["sulfate",x], na.rm = TRUE)
monitors["sulfate", x]
monitors[["sulfate", x]]
monitors[["sulfate",]]
monitors[["sulfate"]]
monitors[["sulfate"]]
t <- monitors["sulfate",x]
View(t)
t[1]
t[[1]]
mean(t[[1]], na.rm = TRUE)
mean(t[[1,1]], na.rm = TRUE)
mean(t[[,1]], na.rm = TRUE)
mean(t[[1,]], na.rm = TRUE)
?mean
x <- read.csv("001.csv")
View(x)
dim(x)
is.data.frame(x)
mean(x["sulfate"], na.rm = TRUE)
mean(x[,"sulfate"], na.rm = TRUE)
x1 <- c(1, 2; 3, 4)
source(pollutantmean.R)
source(pollutantmean.R)
dir
dir()
source("pollutantmean.R")
pollutantmean(id = 1:2)
source("pollutantmean.R")
pollutantmean(id = 1:2)
pm <- pollutantmean(id = 1:2)
pm
pm <- pollutantmean(id = 1)
pm
source("pollutantmean.R")
pm <- pollutantmean("", "sulfate", 1)
pm
getwd
getwd()
setwd("/Users/chrislabbe/Downloads/Analytics/Coursera/Johns Hopkins R Programming/")
pm <- pollutantmean("specdata/", "sulfate", 1)
read.csv("specdata/001.csv")
dir
dir()
pm <- pollutantmean("specdata/", "sulfate", 1)
pm <- pollutantmean("specdata/", "sulfate", 1)
source("specdata/pollutantmean.R")
pm <- pollutantmean("specdata/", "sulfate", 1)
source("specdata/pollutantmean.R")
pm <- pollutantmean("specdata/", "sulfate", 1)
pm <- pollutantmean("specdata/", "sulfate", 1:2)
pm <- pollutantmean("specdata/", "nitrate", 1:2)
?setwd
setwd("/Users/chrislabbe/Downloads/Analytics/Coursera/Johns Hopkins R Programming/specdata")
pm <- pollutantmean("specdata/", "nitrate", 1:2)
pm <- pollutantmean("/Users/chrislabbe/Downloads/Analytics/Coursera/Johns Hopkins R Programming/specdata/", "nitrate", 1:2)
pm <- pollutantmean("", "nitrate", 1:2)
dir
dir()
getwd()
setwd("/Users/chrislabbe/Downloads/Analytics/Coursera/Johns Hopkins R Programming/")
dir
dir()
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1)
View("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1)
pm <- pollutantmean("specdata", "sulfate", 1)
pm <- pollutantmean("specdata", "sulfate", 1:10)
pm <- pollutantmean("specdata", "nitrate", 70:72)
pm <- pollutantmean("specdata", "nitrate", 23)
?histogram
??histogram
source("complete.R")
complete("specdata", 1:2)
source("complete.R")
complete("specdata", 1:2)
?data.frame
source("complete.R")
complete("specdata", 1:2)
fileSizes <- data.frame(row.names = c("id","nobs"))
View(fileSizes)
fileSizes[1,1] <- 135
View(fileSizes)
fileSizes <- data.frame(1:2, c(136,145))
View(fileSizes)
names(filesSizes) <- c("id", "nobs")
names(fileSizes) <- c("id", "nobs")
View(fileSizes)
source("complete.R")
complete("specdata", 1:2)
cp = complete("specdata", 1:2)
View(cp)
source("complete.R")
cp = complete("specdata", 1:2)
?length
?dim
source("complete.R")
cp = complete("specdata", 1:2)
View(cp)
dim(cp[1])
dim(cp)
cp
dim(cp[,1])
dim(cp[1])
is.data.frame(cp[1])
?list
cp[1]
length(cp[1])
dim(cp[1])
?length
lengths(cp)
dims(cp)
?dim
nrow(cp)
nrow(cp[1])
ncol(cp)
ncol(cp[1])
t <- cp[1]
t
dim(t)
is.data.frame(t)
length(t)
nrows(t)
nrow(t)
NROW(t)
NCOL(t)
t2 <- t[1]
t2
length(t2)
nrow(t2)
NROW(t2)
NCOL(t2)
?nobs
nobs(t)
attributes(t)
source("complete.R")
complete("specdata",1:2)
cp <- complete("specdata",1:2)
length(cp)
View(cp)
length("Date","specdata/001.csv")
length(cp["Date","specdata/001.csv"])
dim(cp[,"specdata/001.csv"])
length(cp[,"specdata/001.csv"])
is.data.frame(cp)
is.data.frame(cp[,"specdata/001.csv"])
source("complete.R")
complete("specdata",1:2)
cp <- complete("specdata", 1:2)
View(cp)
is.data.frame(cp)
is.data.frame(cp["specdata/001.csv"])
is.data.frame(cp[,"specdata/001.csv"])
View(cp)
View(cp[1])
View(cp[1,"Date"])
View(cp["Date"])
View(cp[1,1])
lenght(cp[1,1])
length(cp[1,1])
dim(cp[1,1])
?dim
nrow(cp[1,1])
NROW(cp[1,1])
attributes(cp[1,1])
t <- cp[1,1]
length(t$Date)
length(cp[1,1]$Date)
length(cp[1]$Date)
length(cp["specdata/001.csv",1]$Date)
length(cp["specdata/001.csv"]$Date)
length(cp[1,"specdata/001.csv"]$Date)
length(cp["specdata/001.csv"]$Date)
length(cp["specdata.001.csv"]$Date)
length(cp[1,"specdata.001.csv"]$Date)
source("complete.R")
complete("specdata", 1:2)
cp <- complete("specdata", 1:2)
View(cp)
id <- 1:2
id
monitorsList <- c("specdata/001.csv","specdata/002.csv")
length(monitorsList[id,1]$Date)
length(monitorsList[id, 1]$Date)
monitorsList <- data.frame(monitorsList)
length(monitorsList[id, 1]$Date)
monitorList <- data.frame(sapply(c("specdata/001.csv","specdata/002.csv"),read.csv))
length(monitorsList[id, 1]$Date)
length(monitorList[id, 1]$Date)
sapply(monitorList[id, 1]$Date, length)
sapply(monitorList[id, 1], length)
id
sapply(monitorList[id], length)
sapply(monitorList[1,id], length)
sapply(monitorList[1,id]$Date, length)
sapply(monitorList[id, 1]$Date, length)
sapply(monitorList[id]$Date, length)
sapply(monitorList[id]$Date, length)
lapply(monitorList[id]$Date, length)
lapply(monitorList[id, 1]$Date, length)
sapply(monitorList[id, 1]$Date, length)
sapply(monitorList[1, 1]$Date, length)
sapply(monitorList[id, 1], length)
sapply(monitorList[id, 2], length)
sapply(monitorList[1,id], length)
sapply(monitorList[2,id], length)
sapply(monitorList[1,id]$Date, length)
sapply(monitorList[1,id]$sulfate, length)
sapply(monitorList[1,1], length)
sapply(monitorList[1,2], length)
id
sapply(monitorList[1,id], length)
sapply(monitorList[1,1]$Date, length)
t <- sapply(monitorList[1,1], length)
t
t * 2
monitorList <- sapply(c("specdata/001.csv","specdata/002.csv"),read.csv)
t <- sapply(monitorList[1,1], length)
t
t <- sapply(monitorList[1,id], length)
t
t <- sapply(monitorList[1,id]$Date, length)
t
t <- data.frame(sapply(monitorList[1,id], length))
t
library("caret", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("gbm", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("pROC", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("partykit", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("kernlab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("Fahrmeir", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("Fahrmeir", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("caret", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("gbm", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("pROC", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("partykit", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("kernlab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
p = c(.05, .67, NA, .32, .90)
p == NA
is.na(p)
library(rpart)
rpart1 <- rpart(Class ~ .,+                 data = train_data,                +                 control = rpart.control(maxdepth = 2))
rpart1 <- rpart(Class ~ .,                +                 data = train_data,                +                 control = rpart.control(maxdepth = 2))
rpart1 <- rpart(Class ~ .,+                 data = train_data,+                 control = rpart.control(maxdepth = 2))
head(rpart)
rpart1 <- rpart(Class ~ .,
data = train_data,
control = rpart.control(maxdepth = 2))
?train
clear()
setwd("/Volumes/WININSTALL/DataScience/Coursera/JohnsHopkinsDataScience/Course 5 - Reproducable Data/RepData_PeerAssessment1/")
dir()
open("PA1_template.Rmd")
View("PA1_template.Rmd")
sm = 25
print("hello %d", sm)
sprintf("hello %d", sm)
# fetch the data
activity = read.csv("activity.csv")
# split up the step counts by day
stepsByDay = split(activity$steps, activity$date, drop = FALSE)
# stepsByDay now has all step values from each day
# we can calculate the total for each using sapply to loop the sum function
totalEachDay = sapply(stepsByDay, sum)
# and create a histogram of the results
hist(totalEachDay)
# since we have the data all compact, let's just run a quick summary of the data
# and capture mean & median
sumStats = summary(totalEachDay)
stepsMean = sumStats[["Mean"]]
stepsMedian = sumStats[["Median"]]
# and show the results to our readers
sprintf("Average steps per day = %d", stepsMean)
sprintf("Median of steps per day = %d", stepsMedian)
# break up the data by 5 minute chunks and calculate a 5 min avg for all days
timeSplit = split(activity$steps, activity$interval)
splitAverages = sapply(timeSplit, mean, na.rm = TRUE)
# and plot the timeseries showing the activity distribution throughout the average day
plot(splitAverages ~ names(timeSplit), type = "l")
# find the max average on a daily basis, and the time associated with this max
avgMaxTime = activity$interval[which.max(splitAverages[[1]])]
avgMaxValue = max(splitAverages)
sprintf("On average the most active time appears to be %d with and average of %3.2f steps!", avgMaxTime, avgMaxValue)
which.max(splitAverages[[1]])
which.max(splitAverages)
which.max(splitAverages)[[1]]
temp = which.max(splitAverages)
class(temp)
temp
names(temp)
# break up the data by 5 minute chunks and calculate a 5 min avg for all days
timeSplit = split(activity$steps, activity$interval)
splitAverages = sapply(timeSplit, mean, na.rm = TRUE)
# and plot the timeseries showing the activity distribution throughout the average day
plot(splitAverages ~ names(timeSplit), type = "l")
# find the max average on a daily basis, and the time associated with this max
avgMaxTime = activity$interval[which.max(splitAverages)[[1]]]
avgMaxValue = max(splitAverages)
sprintf("On average the most active time appears to be %d with and average of %3.2f steps!", avgMaxTime, avgMaxValue)
# break up the data by 5 minute chunks and calculate a 5 min avg for all days
timeSplit = split(activity$steps, activity$interval)
splitAverages = sapply(timeSplit, mean, na.rm = TRUE)
# and plot the timeseries showing the activity distribution throughout the average day
plot(splitAverages ~ names(timeSplit), type = "l")
# find the max average on a daily basis, and the time associated with this max
avgMaxTime = activity$interval[which.max(splitAverages)[[1]]]
avgMaxValue = max(splitAverages)
sprintf("On average the most active time appears to be %04d with and average of %3.2f steps!", avgMaxTime, avgMaxValue)
View(activity)
sum(activity == NA)
activity$steps == NA
View(activity)
activity$steps
sum(is.na(activity$steps))
# however, there are a lot of NA values in the data and these might be messing with
# the overall statistics
print("There are %d NA values in the %d measurements", sum(is.na(activity$steps), length(activity$steps))
)
# however, there are a lot of NA values in the data and these might be messing with
# the overall statistics
sprintf("There are %d NA values in the %d measurements", sum(is.na(activity$steps)), length(activity$steps))
activityNew = within(activity, activity$steps <- ifelse(!is.na(activity$steps),splitAverages,activity$steps)
)
activityNew = within(activity, activityNew$steps <- ifelse(!is.na(activity$steps),splitAverages,activity$steps))
activityNew = activity
activityNew = within(activityNew, activityNew$steps <- ifelse(is.na(activityNew$steps),splitAverages,activityNew$steps))
View(activityNew)
activityNew = transform(activityNew, steps = ifelse(is.na(steps),splitAverages,steps))
aN = transform(activityNew, steps = ifelse(is.na(steps),splitAverages,steps))
aN2 = activity
aN2 = transform(aN2, steps = ifelse(is.na(steps),splitAverages,steps))
source('~/.active-rstudio-document', echo=TRUE)
summary(activityNew$steps)
weekdays(activity$date)
weekdays(as.date(activity$date))
weekdays(as.Date(activity$date))
temp = split(activity$steps, weekdays(as.Date(activity$date)))
mean(temp$Friday)
summary(temp$Friday)
summary(temp)
mean(temp$Friday, na.rm = TRUE)
sapply(temp, mean, na.rm = TRUE)
summaries = sapply(temp, summary, na.rm = TRUE)
summaries
means = sapply(temp, mean, na.rm = TRUE)
plot(means ~ names(temp))
plot(means ~ names(temp), type = "l")
names(temp)
plot(names(temp) ~ means, type = "l")
plot(as.factor(names(temp)) ~ means, type = "l")
means
means
activityNew = transform(activityNew, weekday = weekdays(as.Date(date)))
View(activityNew)
activityNew = transform(activityNew, weekend = ifelse(weekday == c("Saturday", "Sunday"), TRUE, FALSE))
View(activityNew)
weekVWeekend = split(activityNew$steps, activityNew$weekend)
View(weekVWeekend)
str(weekVWeekend)
summary(weekVWeekend)
sapply(weekVWeekend, summary, na.rm = TRUE)
timeSplitNew = split(activityNew$steps, c(activity$weekend, activity$interval))
summary(timeSplitNew)
str(timeSplitNew)
View(timeSplitNew)
